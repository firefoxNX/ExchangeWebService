// Generated by xsd compiler for ios/objective-c
// DO NOT CHANGE!

#import <Foundation/Foundation.h>
#import "HEWSItemType.h"
#import "HEWSNonEmptyArrayOfResponseObjectsType.h"
#import "HEWSArrayOfStringsType.h"
#import "HEWSBodyType.h"
#import "HEWSEffectiveRightsType.h"
#import "HEWSMimeContentType.h"
#import "HEWSItemIdType.h"
#import "HEWSFolderIdType.h"
#import "HEWSExtendedPropertyType.h"
#import "HEWSNonEmptyArrayOfInternetHeadersType.h"
#import "HEWSNonEmptyArrayOfAttachmentsType.h"

@implementation HEWSItemType

@synthesize mimeContent = _mimeContent;
@synthesize itemId = _itemId;
@synthesize parentFolderId = _parentFolderId;
@synthesize itemClass = _itemClass;
@synthesize subject = _subject;
@synthesize sensitivity = _sensitivity;
@synthesize body = _body;
@synthesize attachments = _attachments;
@synthesize dateTimeReceived = _dateTimeReceived;
@synthesize size = _size;
@synthesize categories = _categories;
@synthesize importance = _importance;
@synthesize inReplyTo = _inReplyTo;
@synthesize isSubmitted = _isSubmitted;
@synthesize isDraft = _isDraft;
@synthesize isFromMe = _isFromMe;
@synthesize isResend = _isResend;
@synthesize isUnmodified = _isUnmodified;
@synthesize internetMessageHeaders = _internetMessageHeaders;
@synthesize dateTimeSent = _dateTimeSent;
@synthesize dateTimeCreated = _dateTimeCreated;
@synthesize responseObjects = _responseObjects;
@synthesize reminderDueBy = _reminderDueBy;
@synthesize reminderIsSet = _reminderIsSet;
@synthesize reminderMinutesBeforeStart = _reminderMinutesBeforeStart;
@synthesize displayCc = _displayCc;
@synthesize displayTo = _displayTo;
@synthesize hasAttachments = _hasAttachments;
@synthesize extendedProperty = _extendedProperty;
@synthesize culture = _culture;
@synthesize effectiveRights = _effectiveRights;
@synthesize lastModifiedName = _lastModifiedName;
@synthesize lastModifiedTime = _lastModifiedTime;
@synthesize isAssociated = _isAssociated;
@synthesize webClientReadFormQueryString = _webClientReadFormQueryString;
@synthesize webClientEditFormQueryString = _webClientEditFormQueryString;
@synthesize conversationId = _conversationId;
@synthesize uniqueBody = _uniqueBody;
@synthesize storeEntryId = _storeEntryId;

// class meta-data method
// note: this method is only for internal use, DO NOT CHANGE!
+(PicoClassSchema *)getClassMetaData {
    return nil;
}

// property meta-data method
// note: this method is only for internal use, DO NOT CHANGE!
+(NSMutableDictionary *)getPropertyMetaData {
    NSMutableDictionary *map = [NSMutableDictionary dictionary];
    
    PicoPropertySchema *ps = nil;
    ps = [[PicoPropertySchema alloc] initWithKind:PICO_KIND_ELEMENT xmlName:@"MimeContent" propertyName:@"mimeContent" type:PICO_TYPE_OBJECT clazz:[HEWSMimeContentType class]];
    [map setObject:ps forKey:@"mimeContent"];
    [ps release];
    ps = [[PicoPropertySchema alloc] initWithKind:PICO_KIND_ELEMENT xmlName:@"ItemId" propertyName:@"itemId" type:PICO_TYPE_OBJECT clazz:[HEWSItemIdType class]];
    [map setObject:ps forKey:@"itemId"];
    [ps release];
    ps = [[PicoPropertySchema alloc] initWithKind:PICO_KIND_ELEMENT xmlName:@"ParentFolderId" propertyName:@"parentFolderId" type:PICO_TYPE_OBJECT clazz:[HEWSFolderIdType class]];
    [map setObject:ps forKey:@"parentFolderId"];
    [ps release];
    ps = [[PicoPropertySchema alloc] initWithKind:PICO_KIND_ELEMENT xmlName:@"ItemClass" propertyName:@"itemClass" type:PICO_TYPE_STRING clazz:nil];
    [map setObject:ps forKey:@"itemClass"];
    [ps release];
    ps = [[PicoPropertySchema alloc] initWithKind:PICO_KIND_ELEMENT xmlName:@"Subject" propertyName:@"subject" type:PICO_TYPE_STRING clazz:nil];
    [map setObject:ps forKey:@"subject"];
    [ps release];
    ps = [[PicoPropertySchema alloc] initWithKind:PICO_KIND_ELEMENT xmlName:@"Sensitivity" propertyName:@"sensitivity" type:PICO_TYPE_ENUM clazz:nil];
    [map setObject:ps forKey:@"sensitivity"];
    [ps release];
    ps = [[PicoPropertySchema alloc] initWithKind:PICO_KIND_ELEMENT xmlName:@"Body" propertyName:@"body" type:PICO_TYPE_OBJECT clazz:[HEWSBodyType class]];
    [map setObject:ps forKey:@"body"];
    [ps release];
    ps = [[PicoPropertySchema alloc] initWithKind:PICO_KIND_ELEMENT xmlName:@"Attachments" propertyName:@"attachments" type:PICO_TYPE_OBJECT clazz:[HEWSNonEmptyArrayOfAttachmentsType class]];
    [map setObject:ps forKey:@"attachments"];
    [ps release];
    ps = [[PicoPropertySchema alloc] initWithKind:PICO_KIND_ELEMENT xmlName:@"DateTimeReceived" propertyName:@"dateTimeReceived" type:PICO_TYPE_DATE clazz:nil];
    [map setObject:ps forKey:@"dateTimeReceived"];
    [ps release];
    ps = [[PicoPropertySchema alloc] initWithKind:PICO_KIND_ELEMENT xmlName:@"Size" propertyName:@"size" type:PICO_TYPE_INT clazz:nil];
    [map setObject:ps forKey:@"size"];
    [ps release];
    ps = [[PicoPropertySchema alloc] initWithKind:PICO_KIND_ELEMENT xmlName:@"Categories" propertyName:@"categories" type:PICO_TYPE_OBJECT clazz:[HEWSArrayOfStringsType class]];
    [map setObject:ps forKey:@"categories"];
    [ps release];
    ps = [[PicoPropertySchema alloc] initWithKind:PICO_KIND_ELEMENT xmlName:@"Importance" propertyName:@"importance" type:PICO_TYPE_ENUM clazz:nil];
    [map setObject:ps forKey:@"importance"];
    [ps release];
    ps = [[PicoPropertySchema alloc] initWithKind:PICO_KIND_ELEMENT xmlName:@"InReplyTo" propertyName:@"inReplyTo" type:PICO_TYPE_STRING clazz:nil];
    [map setObject:ps forKey:@"inReplyTo"];
    [ps release];
    ps = [[PicoPropertySchema alloc] initWithKind:PICO_KIND_ELEMENT xmlName:@"IsSubmitted" propertyName:@"isSubmitted" type:PICO_TYPE_BOOL clazz:nil];
    [map setObject:ps forKey:@"isSubmitted"];
    [ps release];
    ps = [[PicoPropertySchema alloc] initWithKind:PICO_KIND_ELEMENT xmlName:@"IsDraft" propertyName:@"isDraft" type:PICO_TYPE_BOOL clazz:nil];
    [map setObject:ps forKey:@"isDraft"];
    [ps release];
    ps = [[PicoPropertySchema alloc] initWithKind:PICO_KIND_ELEMENT xmlName:@"IsFromMe" propertyName:@"isFromMe" type:PICO_TYPE_BOOL clazz:nil];
    [map setObject:ps forKey:@"isFromMe"];
    [ps release];
    ps = [[PicoPropertySchema alloc] initWithKind:PICO_KIND_ELEMENT xmlName:@"IsResend" propertyName:@"isResend" type:PICO_TYPE_BOOL clazz:nil];
    [map setObject:ps forKey:@"isResend"];
    [ps release];
    ps = [[PicoPropertySchema alloc] initWithKind:PICO_KIND_ELEMENT xmlName:@"IsUnmodified" propertyName:@"isUnmodified" type:PICO_TYPE_BOOL clazz:nil];
    [map setObject:ps forKey:@"isUnmodified"];
    [ps release];
    ps = [[PicoPropertySchema alloc] initWithKind:PICO_KIND_ELEMENT xmlName:@"InternetMessageHeaders" propertyName:@"internetMessageHeaders" type:PICO_TYPE_OBJECT clazz:[HEWSNonEmptyArrayOfInternetHeadersType class]];
    [map setObject:ps forKey:@"internetMessageHeaders"];
    [ps release];
    ps = [[PicoPropertySchema alloc] initWithKind:PICO_KIND_ELEMENT xmlName:@"DateTimeSent" propertyName:@"dateTimeSent" type:PICO_TYPE_DATE clazz:nil];
    [map setObject:ps forKey:@"dateTimeSent"];
    [ps release];
    ps = [[PicoPropertySchema alloc] initWithKind:PICO_KIND_ELEMENT xmlName:@"DateTimeCreated" propertyName:@"dateTimeCreated" type:PICO_TYPE_DATE clazz:nil];
    [map setObject:ps forKey:@"dateTimeCreated"];
    [ps release];
    ps = [[PicoPropertySchema alloc] initWithKind:PICO_KIND_ELEMENT xmlName:@"ResponseObjects" propertyName:@"responseObjects" type:PICO_TYPE_OBJECT clazz:[HEWSNonEmptyArrayOfResponseObjectsType class]];
    [map setObject:ps forKey:@"responseObjects"];
    [ps release];
    ps = [[PicoPropertySchema alloc] initWithKind:PICO_KIND_ELEMENT xmlName:@"ReminderDueBy" propertyName:@"reminderDueBy" type:PICO_TYPE_DATE clazz:nil];
    [map setObject:ps forKey:@"reminderDueBy"];
    [ps release];
    ps = [[PicoPropertySchema alloc] initWithKind:PICO_KIND_ELEMENT xmlName:@"ReminderIsSet" propertyName:@"reminderIsSet" type:PICO_TYPE_BOOL clazz:nil];
    [map setObject:ps forKey:@"reminderIsSet"];
    [ps release];
    ps = [[PicoPropertySchema alloc] initWithKind:PICO_KIND_ELEMENT xmlName:@"ReminderMinutesBeforeStart" propertyName:@"reminderMinutesBeforeStart" type:PICO_TYPE_STRING clazz:nil];
    [map setObject:ps forKey:@"reminderMinutesBeforeStart"];
    [ps release];
    ps = [[PicoPropertySchema alloc] initWithKind:PICO_KIND_ELEMENT xmlName:@"DisplayCc" propertyName:@"displayCc" type:PICO_TYPE_STRING clazz:nil];
    [map setObject:ps forKey:@"displayCc"];
    [ps release];
    ps = [[PicoPropertySchema alloc] initWithKind:PICO_KIND_ELEMENT xmlName:@"DisplayTo" propertyName:@"displayTo" type:PICO_TYPE_STRING clazz:nil];
    [map setObject:ps forKey:@"displayTo"];
    [ps release];
    ps = [[PicoPropertySchema alloc] initWithKind:PICO_KIND_ELEMENT xmlName:@"HasAttachments" propertyName:@"hasAttachments" type:PICO_TYPE_BOOL clazz:nil];
    [map setObject:ps forKey:@"hasAttachments"];
    [ps release];
    ps = [[PicoPropertySchema alloc] initWithKind:PICO_KIND_ELEMENT_ARRAY xmlName:@"ExtendedProperty" propertyName:@"extendedProperty" type:PICO_TYPE_OBJECT clazz:[HEWSExtendedPropertyType class]];
    [map setObject:ps forKey:@"extendedProperty"];
    [ps release];
    ps = [[PicoPropertySchema alloc] initWithKind:PICO_KIND_ELEMENT xmlName:@"Culture" propertyName:@"culture" type:PICO_TYPE_STRING clazz:nil];
    [map setObject:ps forKey:@"culture"];
    [ps release];
    ps = [[PicoPropertySchema alloc] initWithKind:PICO_KIND_ELEMENT xmlName:@"EffectiveRights" propertyName:@"effectiveRights" type:PICO_TYPE_OBJECT clazz:[HEWSEffectiveRightsType class]];
    [map setObject:ps forKey:@"effectiveRights"];
    [ps release];
    ps = [[PicoPropertySchema alloc] initWithKind:PICO_KIND_ELEMENT xmlName:@"LastModifiedName" propertyName:@"lastModifiedName" type:PICO_TYPE_STRING clazz:nil];
    [map setObject:ps forKey:@"lastModifiedName"];
    [ps release];
    ps = [[PicoPropertySchema alloc] initWithKind:PICO_KIND_ELEMENT xmlName:@"LastModifiedTime" propertyName:@"lastModifiedTime" type:PICO_TYPE_DATE clazz:nil];
    [map setObject:ps forKey:@"lastModifiedTime"];
    [ps release];
    ps = [[PicoPropertySchema alloc] initWithKind:PICO_KIND_ELEMENT xmlName:@"IsAssociated" propertyName:@"isAssociated" type:PICO_TYPE_BOOL clazz:nil];
    [map setObject:ps forKey:@"isAssociated"];
    [ps release];
    ps = [[PicoPropertySchema alloc] initWithKind:PICO_KIND_ELEMENT xmlName:@"WebClientReadFormQueryString" propertyName:@"webClientReadFormQueryString" type:PICO_TYPE_STRING clazz:nil];
    [map setObject:ps forKey:@"webClientReadFormQueryString"];
    [ps release];
    ps = [[PicoPropertySchema alloc] initWithKind:PICO_KIND_ELEMENT xmlName:@"WebClientEditFormQueryString" propertyName:@"webClientEditFormQueryString" type:PICO_TYPE_STRING clazz:nil];
    [map setObject:ps forKey:@"webClientEditFormQueryString"];
    [ps release];
    ps = [[PicoPropertySchema alloc] initWithKind:PICO_KIND_ELEMENT xmlName:@"ConversationId" propertyName:@"conversationId" type:PICO_TYPE_OBJECT clazz:[HEWSItemIdType class]];
    [map setObject:ps forKey:@"conversationId"];
    [ps release];
    ps = [[PicoPropertySchema alloc] initWithKind:PICO_KIND_ELEMENT xmlName:@"UniqueBody" propertyName:@"uniqueBody" type:PICO_TYPE_OBJECT clazz:[HEWSBodyType class]];
    [map setObject:ps forKey:@"uniqueBody"];
    [ps release];
    ps = [[PicoPropertySchema alloc] initWithKind:PICO_KIND_ELEMENT xmlName:@"StoreEntryId" propertyName:@"storeEntryId" type:PICO_TYPE_DATA clazz:nil];
    [map setObject:ps forKey:@"storeEntryId"];
    [ps release];
    
    return map;
}



-(void)dealloc {
    self.mimeContent = nil;
    self.itemId = nil;
    self.parentFolderId = nil;
    self.itemClass = nil;
    self.subject = nil;
    self.sensitivity = nil;
    self.body = nil;
    self.attachments = nil;
    self.dateTimeReceived = nil;
    self.size = nil;
    self.categories = nil;
    self.importance = nil;
    self.inReplyTo = nil;
    self.isSubmitted = nil;
    self.isDraft = nil;
    self.isFromMe = nil;
    self.isResend = nil;
    self.isUnmodified = nil;
    self.internetMessageHeaders = nil;
    self.dateTimeSent = nil;
    self.dateTimeCreated = nil;
    self.responseObjects = nil;
    self.reminderDueBy = nil;
    self.reminderIsSet = nil;
    self.reminderMinutesBeforeStart = nil;
    self.displayCc = nil;
    self.displayTo = nil;
    self.hasAttachments = nil;
    self.extendedProperty = nil;
    self.culture = nil;
    self.effectiveRights = nil;
    self.lastModifiedName = nil;
    self.lastModifiedTime = nil;
    self.isAssociated = nil;
    self.webClientReadFormQueryString = nil;
    self.webClientEditFormQueryString = nil;
    self.conversationId = nil;
    self.uniqueBody = nil;
    self.storeEntryId = nil;
    [super dealloc];
}

@end
