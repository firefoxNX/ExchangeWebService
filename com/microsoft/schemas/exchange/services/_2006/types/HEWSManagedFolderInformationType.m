// Generated by xsd compiler for ios/objective-c
// DO NOT CHANGE!

#import <Foundation/Foundation.h>
#import "HEWSManagedFolderInformationType.h"

@implementation HEWSManagedFolderInformationType

@synthesize canDelete = _canDelete;
@synthesize canRenameOrMove = _canRenameOrMove;
@synthesize mustDisplayComment = _mustDisplayComment;
@synthesize hasQuota = _hasQuota;
@synthesize isManagedFoldersRoot = _isManagedFoldersRoot;
@synthesize managedFolderId = _managedFolderId;
@synthesize comment = _comment;
@synthesize storageQuota = _storageQuota;
@synthesize folderSize = _folderSize;
@synthesize homePage = _homePage;

// class meta-data method
// note: this method is only for internal use, DO NOT CHANGE!
+(PicoClassSchema *)getClassMetaData {
    return nil;
}

// property meta-data method
// note: this method is only for internal use, DO NOT CHANGE!
+(NSMutableDictionary *)getPropertyMetaData {
    NSMutableDictionary *map = [NSMutableDictionary dictionary];
    
    PicoPropertySchema *ps = nil;
    ps = [[PicoPropertySchema alloc] initWithKind:PICO_KIND_ELEMENT xmlName:@"CanDelete" propertyName:@"canDelete" type:PICO_TYPE_BOOL clazz:nil];
    [map setObject:ps forKey:@"canDelete"];
    [ps release];
    ps = [[PicoPropertySchema alloc] initWithKind:PICO_KIND_ELEMENT xmlName:@"CanRenameOrMove" propertyName:@"canRenameOrMove" type:PICO_TYPE_BOOL clazz:nil];
    [map setObject:ps forKey:@"canRenameOrMove"];
    [ps release];
    ps = [[PicoPropertySchema alloc] initWithKind:PICO_KIND_ELEMENT xmlName:@"MustDisplayComment" propertyName:@"mustDisplayComment" type:PICO_TYPE_BOOL clazz:nil];
    [map setObject:ps forKey:@"mustDisplayComment"];
    [ps release];
    ps = [[PicoPropertySchema alloc] initWithKind:PICO_KIND_ELEMENT xmlName:@"HasQuota" propertyName:@"hasQuota" type:PICO_TYPE_BOOL clazz:nil];
    [map setObject:ps forKey:@"hasQuota"];
    [ps release];
    ps = [[PicoPropertySchema alloc] initWithKind:PICO_KIND_ELEMENT xmlName:@"IsManagedFoldersRoot" propertyName:@"isManagedFoldersRoot" type:PICO_TYPE_BOOL clazz:nil];
    [map setObject:ps forKey:@"isManagedFoldersRoot"];
    [ps release];
    ps = [[PicoPropertySchema alloc] initWithKind:PICO_KIND_ELEMENT xmlName:@"ManagedFolderId" propertyName:@"managedFolderId" type:PICO_TYPE_STRING clazz:nil];
    [map setObject:ps forKey:@"managedFolderId"];
    [ps release];
    ps = [[PicoPropertySchema alloc] initWithKind:PICO_KIND_ELEMENT xmlName:@"Comment" propertyName:@"comment" type:PICO_TYPE_STRING clazz:nil];
    [map setObject:ps forKey:@"comment"];
    [ps release];
    ps = [[PicoPropertySchema alloc] initWithKind:PICO_KIND_ELEMENT xmlName:@"StorageQuota" propertyName:@"storageQuota" type:PICO_TYPE_INT clazz:nil];
    [map setObject:ps forKey:@"storageQuota"];
    [ps release];
    ps = [[PicoPropertySchema alloc] initWithKind:PICO_KIND_ELEMENT xmlName:@"FolderSize" propertyName:@"folderSize" type:PICO_TYPE_INT clazz:nil];
    [map setObject:ps forKey:@"folderSize"];
    [ps release];
    ps = [[PicoPropertySchema alloc] initWithKind:PICO_KIND_ELEMENT xmlName:@"HomePage" propertyName:@"homePage" type:PICO_TYPE_STRING clazz:nil];
    [map setObject:ps forKey:@"homePage"];
    [ps release];
    
    return map;
}



-(void)dealloc {
    self.canDelete = nil;
    self.canRenameOrMove = nil;
    self.mustDisplayComment = nil;
    self.hasQuota = nil;
    self.isManagedFoldersRoot = nil;
    self.managedFolderId = nil;
    self.comment = nil;
    self.storageQuota = nil;
    self.folderSize = nil;
    self.homePage = nil;
    [super dealloc];
}

@end
