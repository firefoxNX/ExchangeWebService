// Generated by xsd compiler for ios/objective-c
// DO NOT CHANGE!

#import <Foundation/Foundation.h>
#import "HEWSItemResponseShapeType.h"
#import "HEWSNonEmptyArrayOfPathsToElementType.h"

@implementation HEWSItemResponseShapeType

@synthesize baseShape = _baseShape;
@synthesize includeMimeContent = _includeMimeContent;
@synthesize bodyType = _bodyType;
@synthesize filterHtmlContent = _filterHtmlContent;
@synthesize convertHtmlCodePageToUTF8 = _convertHtmlCodePageToUTF8;
@synthesize additionalProperties = _additionalProperties;

// class meta-data method
// note: this method is only for internal use, DO NOT CHANGE!
+(PicoClassSchema *)getClassMetaData {
    return nil;
}

// property meta-data method
// note: this method is only for internal use, DO NOT CHANGE!
+(NSMutableDictionary *)getPropertyMetaData {
    NSMutableDictionary *map = [NSMutableDictionary dictionary];
    
    PicoPropertySchema *ps = nil;
    ps = [[PicoPropertySchema alloc] initWithKind:PICO_KIND_ELEMENT xmlName:@"BaseShape" propertyName:@"baseShape" type:PICO_TYPE_ENUM clazz:nil];
    [map setObject:ps forKey:@"baseShape"];
    [ps release];
    ps = [[PicoPropertySchema alloc] initWithKind:PICO_KIND_ELEMENT xmlName:@"IncludeMimeContent" propertyName:@"includeMimeContent" type:PICO_TYPE_BOOL clazz:nil];
    [map setObject:ps forKey:@"includeMimeContent"];
    [ps release];
    ps = [[PicoPropertySchema alloc] initWithKind:PICO_KIND_ELEMENT xmlName:@"BodyType" propertyName:@"bodyType" type:PICO_TYPE_ENUM clazz:nil];
    [map setObject:ps forKey:@"bodyType"];
    [ps release];
    ps = [[PicoPropertySchema alloc] initWithKind:PICO_KIND_ELEMENT xmlName:@"FilterHtmlContent" propertyName:@"filterHtmlContent" type:PICO_TYPE_BOOL clazz:nil];
    [map setObject:ps forKey:@"filterHtmlContent"];
    [ps release];
    ps = [[PicoPropertySchema alloc] initWithKind:PICO_KIND_ELEMENT xmlName:@"ConvertHtmlCodePageToUTF8" propertyName:@"convertHtmlCodePageToUTF8" type:PICO_TYPE_BOOL clazz:nil];
    [map setObject:ps forKey:@"convertHtmlCodePageToUTF8"];
    [ps release];
    ps = [[PicoPropertySchema alloc] initWithKind:PICO_KIND_ELEMENT xmlName:@"AdditionalProperties" propertyName:@"additionalProperties" type:PICO_TYPE_OBJECT clazz:[HEWSNonEmptyArrayOfPathsToElementType class]];
    [map setObject:ps forKey:@"additionalProperties"];
    [ps release];
    
    return map;
}



-(void)dealloc {
    self.baseShape = nil;
    self.includeMimeContent = nil;
    self.bodyType = nil;
    self.filterHtmlContent = nil;
    self.convertHtmlCodePageToUTF8 = nil;
    self.additionalProperties = nil;
    [super dealloc];
}

@end
