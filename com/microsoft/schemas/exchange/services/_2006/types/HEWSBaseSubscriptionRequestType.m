// Generated by xsd compiler for ios/objective-c
// DO NOT CHANGE!

#import <Foundation/Foundation.h>
#import "HEWSBaseSubscriptionRequestType.h"
#import "HEWSNonEmptyArrayOfBaseFolderIdsType.h"
#import "HEWSNonEmptyArrayOfNotificationEventTypesType.h"

@implementation HEWSBaseSubscriptionRequestType

@synthesize folderIds = _folderIds;
@synthesize eventTypes = _eventTypes;
@synthesize watermark = _watermark;
@synthesize subscribeToAllFolders = _subscribeToAllFolders;

// class meta-data method
// note: this method is only for internal use, DO NOT CHANGE!
+(PicoClassSchema *)getClassMetaData {
    return nil;
}

// property meta-data method
// note: this method is only for internal use, DO NOT CHANGE!
+(NSMutableDictionary *)getPropertyMetaData {
    NSMutableDictionary *map = [NSMutableDictionary dictionary];
    
    PicoPropertySchema *ps = nil;
    ps = [[PicoPropertySchema alloc] initWithKind:PICO_KIND_ELEMENT xmlName:@"FolderIds" propertyName:@"folderIds" type:PICO_TYPE_OBJECT clazz:[HEWSNonEmptyArrayOfBaseFolderIdsType class]];
    [map setObject:ps forKey:@"folderIds"];
    [ps release];
    ps = [[PicoPropertySchema alloc] initWithKind:PICO_KIND_ELEMENT xmlName:@"EventTypes" propertyName:@"eventTypes" type:PICO_TYPE_OBJECT clazz:[HEWSNonEmptyArrayOfNotificationEventTypesType class]];
    [map setObject:ps forKey:@"eventTypes"];
    [ps release];
    ps = [[PicoPropertySchema alloc] initWithKind:PICO_KIND_ELEMENT xmlName:@"Watermark" propertyName:@"watermark" type:PICO_TYPE_STRING clazz:nil];
    [map setObject:ps forKey:@"watermark"];
    [ps release];
    ps = [[PicoPropertySchema alloc] initWithKind:PICO_KIND_ATTRIBUTE xmlName:@"SubscribeToAllFolders" propertyName:@"subscribeToAllFolders" type:PICO_TYPE_BOOL clazz:nil];
    [map setObject:ps forKey:@"subscribeToAllFolders"];
    [ps release];
    
    return map;
}



-(void)dealloc {
    self.folderIds = nil;
    self.eventTypes = nil;
    self.watermark = nil;
    self.subscribeToAllFolders = nil;
    [super dealloc];
}

@end
