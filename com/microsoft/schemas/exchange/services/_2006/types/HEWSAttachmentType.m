// Generated by xsd compiler for ios/objective-c
// DO NOT CHANGE!

#import <Foundation/Foundation.h>
#import "HEWSAttachmentType.h"
#import "HEWSAttachmentIdType.h"

@implementation HEWSAttachmentType

@synthesize attachmentId = _attachmentId;
@synthesize name = _name;
@synthesize contentType = _contentType;
@synthesize contentId = _contentId;
@synthesize contentLocation = _contentLocation;
@synthesize size = _size;
@synthesize lastModifiedTime = _lastModifiedTime;
@synthesize isInline = _isInline;

// class meta-data method
// note: this method is only for internal use, DO NOT CHANGE!
+(PicoClassSchema *)getClassMetaData {
    return nil;
}

// property meta-data method
// note: this method is only for internal use, DO NOT CHANGE!
+(NSMutableDictionary *)getPropertyMetaData {
    NSMutableDictionary *map = [NSMutableDictionary dictionary];
    
    PicoPropertySchema *ps = nil;
    ps = [[PicoPropertySchema alloc] initWithKind:PICO_KIND_ELEMENT xmlName:@"AttachmentId" propertyName:@"attachmentId" type:PICO_TYPE_OBJECT clazz:[HEWSAttachmentIdType class]];
    [map setObject:ps forKey:@"attachmentId"];
    [ps release];
    ps = [[PicoPropertySchema alloc] initWithKind:PICO_KIND_ELEMENT xmlName:@"Name" propertyName:@"name" type:PICO_TYPE_STRING clazz:nil];
    [map setObject:ps forKey:@"name"];
    [ps release];
    ps = [[PicoPropertySchema alloc] initWithKind:PICO_KIND_ELEMENT xmlName:@"ContentType" propertyName:@"contentType" type:PICO_TYPE_STRING clazz:nil];
    [map setObject:ps forKey:@"contentType"];
    [ps release];
    ps = [[PicoPropertySchema alloc] initWithKind:PICO_KIND_ELEMENT xmlName:@"ContentId" propertyName:@"contentId" type:PICO_TYPE_STRING clazz:nil];
    [map setObject:ps forKey:@"contentId"];
    [ps release];
    ps = [[PicoPropertySchema alloc] initWithKind:PICO_KIND_ELEMENT xmlName:@"ContentLocation" propertyName:@"contentLocation" type:PICO_TYPE_STRING clazz:nil];
    [map setObject:ps forKey:@"contentLocation"];
    [ps release];
    ps = [[PicoPropertySchema alloc] initWithKind:PICO_KIND_ELEMENT xmlName:@"Size" propertyName:@"size" type:PICO_TYPE_INT clazz:nil];
    [map setObject:ps forKey:@"size"];
    [ps release];
    ps = [[PicoPropertySchema alloc] initWithKind:PICO_KIND_ELEMENT xmlName:@"LastModifiedTime" propertyName:@"lastModifiedTime" type:PICO_TYPE_DATE clazz:nil];
    [map setObject:ps forKey:@"lastModifiedTime"];
    [ps release];
    ps = [[PicoPropertySchema alloc] initWithKind:PICO_KIND_ELEMENT xmlName:@"IsInline" propertyName:@"isInline" type:PICO_TYPE_BOOL clazz:nil];
    [map setObject:ps forKey:@"isInline"];
    [ps release];
    
    return map;
}



-(void)dealloc {
    self.attachmentId = nil;
    self.name = nil;
    self.contentType = nil;
    self.contentId = nil;
    self.contentLocation = nil;
    self.size = nil;
    self.lastModifiedTime = nil;
    self.isInline = nil;
    [super dealloc];
}

@end
